{"version":3,"sources":["utils/brt.ts","utils/types.ts","pages/Config/components/IntervalDetails.tsx","utils/tableIcons.tsx","pages/Config/components/MaterialTable.tsx","pages/Config/Config.tsx","utils/stringManipulations.ts","pages/Dashboard/CPUUsage.tsx","pages/Dashboard/MemoryUsage.tsx","pages/Dashboard/Disk.tsx","pages/Dashboard/MemoryDetails.tsx","utils/useFetch.ts","pages/Dashboard/SystemMetrics.tsx","utils/service.ts","pages/Dashboard/JournalMetrics.tsx","pages/Dashboard/Dashboard.tsx","pages/FloodPing/index.tsx","pages/Input/Groups.tsx","pages/Input/GridBody.tsx","pages/Input/Input.tsx","pages/Monitoring/Jitter.tsx","utils/filterUrl.ts","pages/Jitter/JitterModule.tsx","pages/Monitoring/Columns.tsx","pages/Monitoring/Matrix.tsx","pages/Monitoring/ResLength.tsx","pages/Monitoring/Delay.tsx","pages/Monitoring/Ping.tsx","pages/Monitoring/RouteDetails.tsx","pages/Monitoring/Monitoring.tsx","pages/Ping/PingModule.tsx","router/Navigation.tsx","layouts/Sidebar.tsx","layouts/BaseLayout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TimeInstance","HOST_IP","IntervalDetails","props","useState","durationValue","inputValue","setInputValue","handleSubmit","e","intervalName","a","fetch","method","headers","body","JSON","stringify","value","then","res","json","response","status","toggleComponentView","reFetch","Grid","container","toggleResults","onSubmit","style","display","TextField","id","label","variant","onChange","target","handleIntervalOnChange","Button","color","marginLeft","type","Typography","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","SearchTable","icons","marginTop","options","headerStyle","fontSize","fontWeight","useStyles","makeStyles","theme","root","diplay","cardStyle","minHeight","h6","Config","classes","configIntervals","setConfigIntervals","configRoutes","setConfigRoutes","ping","jitter","setToggleResults","fetchConfigIntervals","resp","data","intervals","forEach","interval","push","test","duration","unit","fetchConfigRoutes","Map","route","uri","has","set","get","Array","from","useEffect","columns","field","title","render","rowData","methods","map","m","Chip","key","handleToggle","spacing","str","n","item","lg","sm","xl","xs","Card","className","CardContent","justifyContent","gutterBottom","charAt","toUpperCase","slice","length","substr","Tooltip","cursor","Close","onClick","name","routes","tableData","r","getTableRoutes","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","onRowDelete","React","memo","series","cpuMetrics","chart","xaxis","categories","labels","show","rotate","rotateAlways","hideOverlappingLabels","trim","background","dataLabels","enabled","stroke","curve","lineCap","width","subtitle","text","align","fill","opacity","gradient","shade","shadeIntensity","inverseColors","opacityFrom","opacityTo","height","memoryUsagePercentMetrics","seriesDiskIO","diskIO","seriesCache","cache","animations","easing","speed","animateGradually","delay","dynamicAnimation","availableBytes","freeBytes","totalBytes","usedBytes","formatTime","times","split","l","useFetch","url","setResponse","error","setError","isLoading","setIsLoading","requestSent","setRequestSent","fetchData","credentials","ok","Error","statusText","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","backgroundColor","palette","paper","SystemMetrics","showLoader","setValue","endTimestamp","Date","getTime","Hour","err","Alert","severity","values","responseInFormat","metricValues","cpuUsageSlice","diskSliceCache","diskSliceDiskIO","memorySliceAvailableBytes","memorySliceFreeBytes","memorySliceTotalBytes","memorySliceUsedBytes","memoryUsedPercentSlice","metric","y","cpuTotalUsage","x","timestamp","disk","cached","memory","usedPercent","segregateMetrics","marginBottom","AppBar","position","Tabs","_event","newValue","indicatorColor","Tab","MemoryUsage","Disk","JournalMetrics","cerr","cwarn","cevents","ckerr","ckwarn","ckevents","format","seriesSystemd","seriesKernel","Dashboard","updateLoader","FloodPing","Type","getRequestType","showDone","setShowDone","selectedRequest","setSelectedRequest","ButtonGroup","aria-label","sendType","Badge","GridBody","updateParent","header","setHeader","bodyValue","setBodyValue","updateItems","i","head","margin","size","multiline","rows","content","inJSON","parse","pair","updateBody","requestsTypeSupported","hyperTexts","elevation","Input","requestType","setRequestType","setHyperTextType","valueURLRoute","setValueURLRoute","applyHeader","setApplyHeader","headerValues","setHeaderValues","applyParams","setApplyParams","paramsValues","setParamsValues","applyBody","setApplyBody","bodyValues","setBodyValues","testInputResponse","setTestInputResponse","message","openSnackBar","setOpenSnackBar","showSnackBar","setShowSnackBar","open","setOpen","showResponseButton","setShowResponseButton","toLowerCase","border","borderRadius","padding","FormControlLabel","control","Checkbox","checked","params","undefined","h","b","console","testURL","Dialog","DialogTitle","DialogContent","dividers","DialogActions","Snackbar","autoHideDuration","onClose","Jitter","filterUrl","startsWith","replace","datas","JitterModule","routesDetails","setRoutesDetails","testServicesRoutes","showCharts","setShowCharts","jitterData","setJitterData","v","matrix","formatdata","float","Autocomplete","event","onInputChange","newInputValue","getChartsData","renderInput","minWidth","toLocaleString","toFixed","round","num","parseInt","Math","Pad","Element","timeSeriesPath","showRouteDetails","setData","trigger","setTrigger","updating","setUpdating","warning","showWarning","fetchTimeSeriesDetails","instance","monitoringDetails","path","matrixName","fetchDetails","details","inMatrixResponse","fetchMatrix","TableRow","TableCell","maxWidth","overflowX","avgValue","monitor","resLength","CircularProgress","disableShrink","thickness","Matrix","TableContainer","maxHeight","overflowY","Table","stickyHeader","TableHead","column","TableBody","ResLength","Delay","Ping","min","mean","max","RouteDetailsComponent","routesChains","showDetails","responseDetailsDelay","responseDetailsResponse","pingMin","pingMean","pingMax","minValue","maxValue","ServicesState","isActive","setIsActive","fetchState","Switch","Monitoring","setShowRouteDetails","routeDetailsData","setRouteDetailsData","RouteDetails","PingModule","pingData","setPingData","Navigator","exact","component","nested","paddingLeft","drawerPaper","whiteSpace","transition","transitions","create","sharp","enteringScreen","drawerPaperClose","leavingScreen","breakpoints","up","toolbarIcon","alignItems","mixins","toolbar","settings","bottom","Sidebar","handleDrawerClose","testListOpen","setTestListOpen","showTestList","menuItems","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","AccessAlarm","PostAdd","NetworkCheck","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","Settings","Drawer","clsx","IconButton","Divider","_useStyles","appBar","zIndex","drawer","appBarShift","paddingRight","menuButton","marginRight","menuButtonHidden","appBarSpacer","overflow","paddingTop","paddingBottom","BaseLayout","_classes","loader","setLoader","useCallback","CssBaseline","Toolbar","edge","Menu","noWrap","darkMode","toggleDarkMode","inputProps","LinearProgress","Container","App","setDarkMode","createMuiTheme","blue","typography","fontFamily","join","overrides","MuiAppBar","colorPrimary","grey","responsiveFontSizes","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3f75c697.chunk.js","sourcesContent":["enum TimeInstance {\n\tMicrosecond = 1000,\n\tMillisecond = 1000000,\n\tSecond = 1000000000,\n\tMinute = 60000000000,\n\tHour = 60 * 60000000000,\n\tDay = 24 * 60 * 60000000000,\n};\n\nexport const formatTime = (data: string) => {\n  const times = data.split('|');\n  const l = times.length;\n  return `${times[l-3]}:${times[l-2]}:${times[l-1]}`;\n};\n\nexport default TimeInstance;","export const HOST_IP = 'http://localhost:9090';\n\nexport interface service_states {\n  ping: string;\n  floodping: string;\n  jitter: string;\n  monitoring: string;\n}\n\n// System Value details\nexport interface SystemValue {\n  range: rangeValues;\n  queryTime: number;\n  values: dataValues[];\n}\n\ninterface rangeValues {\n  start: any;\n  end: any;\n}\n\ninterface dataValues {\n  Value: dataValue;\n  timestamp: string;\n  normalizedTimes: string;\n}\n\ninterface dataValue {\n  cpuTotalUsage: any;\n  memory: memoryDetails;\n  disk: diskDetails;\n}\n\ninterface memoryDetails {\n  totalBytes: string;\n  availableBytes: string;\n  usedBytes: string;\n  usedPercent: any;\n  freeBytes: any;\n}\n\ninterface diskDetails {\n  diskIO: string;\n  cached: string;\n}\n","import React, { useState } from 'react';\nimport { Grid, TextField, Button, Typography } from '@material-ui/core';\nimport { HOST_IP } from '../../../utils/types';\n\nconst IntervalDetails = (props: any) => {\n  const [inputValue, setInputValue] = useState<string>(\n    props.durationValue || ''\n  );\n\n  const handleIntervalOnChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = async (e, intervalName: string) => {\n    await fetch(`${HOST_IP}/config/update-interval`, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        intervalName,\n        value: inputValue\n      })\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(response => {\n        if (response.status === '200') {\n          props.toggleComponentView(intervalName);\n          props.reFetch();\n        }\n      });\n  };\n  return (\n    <Grid container>\n      {props.toggleResults[props.intervalName] ? (\n        <div>\n          <form\n            onSubmit={e => handleSubmit(e, props.intervalName)}\n            style={{ display: 'flex' }}\n          >\n            <TextField\n              id=\"outlined-basic\"\n              label={props.durationValue}\n              variant=\"outlined\"\n              onChange={e => handleIntervalOnChange(e)}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginLeft: '4px' }}\n              type=\"submit\"\n            >\n              Go\n            </Button>\n          </form>\n        </div>\n      ) : (\n        <Typography variant=\"h5\">{props.durationValue}</Typography>\n      )}\n    </Grid>\n  );\n};\n\nexport default IntervalDetails;\n","import React, { forwardRef, MutableRefObject } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nexport const tableIcons = {\n  Add: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <AddBox {...props} ref={ref} />\n  ),\n  Check: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <Check {...props} ref={ref} />\n  ),\n  Clear: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <Clear {...props} ref={ref} />\n  ),\n  Delete: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <DeleteOutline {...props} ref={ref} />\n  ),\n  DetailPanel: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <ChevronRight {...props} ref={ref} />\n  ),\n  Edit: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <Edit {...props} ref={ref} />\n  ),\n  Export: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <SaveAlt {...props} ref={ref} />\n  ),\n  Filter: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <FilterList {...props} ref={ref} />\n  ),\n  FirstPage: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <FirstPage {...props} ref={ref} />\n  ),\n  LastPage: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <LastPage {...props} ref={ref} />\n  ),\n  NextPage: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <ChevronRight {...props} ref={ref} />\n  ),\n  PreviousPage: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <ChevronLeft {...props} ref={ref} />\n  ),\n  ResetSearch: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <Clear {...props} ref={ref} />\n  ),\n  Search: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <Search {...props} ref={ref} />\n  ),\n  SortArrow: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <ArrowDownward {...props} ref={ref} />\n  ),\n  ThirdStateCheck: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <Remove {...props} ref={ref} />\n  ),\n  ViewColumn: forwardRef(\n    (\n      props,\n      ref:\n        | ((instance: SVGSVGElement | null) => void)\n        | MutableRefObject<SVGSVGElement | null>\n        | null\n    ) => <ViewColumn {...props} ref={ref} />\n  )\n};\n","import React from 'react';\nimport { tableIcons } from '../../../utils/tableIcons';\n\nimport MaterialTable from 'material-table';\n\nconst SearchTable = (props: any) => {\n  return (\n    <MaterialTable\n      icons={tableIcons}\n      style={{ marginTop: '10vh' }}\n      options={{\n        headerStyle: {\n          fontSize: 18,\n          fontWeight: 'normal'\n        }\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default SearchTable;\n","import React, { FC, useState, useEffect } from 'react';\nimport { HOST_IP } from '../../utils/types';\nimport IntervalDetails from './components/IntervalDetails';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  makeStyles,\n  Chip,\n  Tooltip\n} from '@material-ui/core';\nimport { Edit as EditIcon, Close as CloseIcon } from '@material-ui/icons';\nimport SearchTable from './components/MaterialTable';\nimport { truncate } from '../../utils/stringManipulations';\n\ninterface IntervalType {\n  test: string;\n  duration: number;\n  unit: string;\n}\n\ninterface TableRouteType {\n  route: string;\n  methods: string[];\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    diplay: 'flex'\n  },\n  cardStyle: {\n    minHeight: '8vh'\n  },\n  h6: {\n    fontWeight: 'normal'\n  }\n}));\n\nconst Config: FC<{}> = () => {\n  const classes = useStyles();\n  const [configIntervals, setConfigIntervals] = useState<IntervalType[] | null>(\n    null\n  );\n  const [configRoutes, setConfigRoutes] = useState<[string, string[]][] | null>(\n    null\n  );\n  const [toggleResults, setToggleResults] = useState({\n    ping: false,\n    jitter: false,\n    'req-res-delay-and-monitoring': false\n  });\n\n  const fetchConfigIntervals = async () => {\n    const response = await fetch(`${HOST_IP}/get-config-intervals`).then(\n      resp => {\n        return resp.json();\n      }\n    );\n    const { data } = response;\n    let intervals: any = [];\n    data.forEach(interval => {\n      intervals.push({\n        test: interval['Test'],\n        duration: interval['Duration'],\n        unit: interval['Type']\n      });\n    });\n    setConfigIntervals(intervals);\n  };\n\n  const fetchConfigRoutes = async () => {\n    const response = await fetch(`${HOST_IP}/get-config-routes`).then(resp => {\n      return resp.json();\n    });\n    const { data } = response;\n    let configRoutes = new Map();\n    data.forEach(route => {\n      const uri = route['URL'] + '/' + route['Route'];\n      if (!configRoutes.has(uri)) {\n        configRoutes.set(uri, [route['Method']]);\n      } else {\n        configRoutes.set(uri, [...configRoutes.get(uri), route['Method']]);\n      }\n    });\n    setConfigRoutes(Array.from(configRoutes));\n  };\n\n  useEffect(() => {\n    fetchConfigIntervals().then(() => fetchConfigRoutes());\n  }, []);\n\n  const getTableRoutes = (routes: [string, string[]][] | null) => {\n    let tableData: TableRouteType[] = [];\n    routes?.forEach(r => {\n      tableData.push({\n        route: r[0],\n        methods: r[1]\n      });\n    });\n    return tableData;\n  };\n\n  const columns = [\n    {\n      field: 'route',\n      title: 'Route'\n    },\n    {\n      field: 'methods',\n      title: 'Methods',\n      render: (rowData: { methods: any[]; route: string }) =>\n        rowData.methods.map(m => (\n          <Chip\n            key={rowData.route + m}\n            variant=\"outlined\"\n            color=\"primary\"\n            label={m}\n          />\n        ))\n    }\n  ];\n\n  const handleToggle = (intervalName: string) => {\n    switch (intervalName) {\n      case 'ping':\n        setToggleResults({ ...toggleResults, ping: !toggleResults['ping'] });\n        break;\n      case 'jitter':\n        setToggleResults({\n          ...toggleResults,\n          jitter: !toggleResults['jitter']\n        });\n        break;\n      case 'req-res-delay-and-monitoring':\n        setToggleResults({\n          ...toggleResults,\n          'req-res-delay-and-monitoring': !toggleResults[\n            'req-res-delay-and-monitoring'\n          ]\n        });\n        break;\n    }\n  };\n\n  return (\n    <>\n      <Grid container spacing={4}>\n        {configIntervals?.map(interval => {\n          const { test, duration, unit } = interval;\n          return (\n            <Grid item lg={3} sm={6} xl={3} xs={12} key={test}>\n              <Card className={classes.cardStyle}>\n                <CardContent>\n                  <Grid container style={{ justifyContent: 'space-between' }}>\n                    <Grid item>\n                      <Typography\n                        gutterBottom\n                        variant=\"h6\"\n                        className={classes.h6}\n                      >\n                        {truncate(\n                          test.charAt(0).toUpperCase() + test.slice(1),\n                          14\n                        )}\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      {toggleResults[test] ? (\n                        <Tooltip title=\"Cancel\" style={{ cursor: 'pointer' }}>\n                          <CloseIcon onClick={() => handleToggle(test)} />\n                        </Tooltip>\n                      ) : (\n                        <Tooltip title=\"Edit\" style={{ cursor: 'pointer' }}>\n                          <EditIcon onClick={() => handleToggle(test)} />\n                        </Tooltip>\n                      )}\n                    </Grid>\n                  </Grid>\n                  <IntervalDetails\n                    reFetch={fetchConfigIntervals}\n                    toggleComponentView={(name: string) => handleToggle(name)}\n                    toggleResults={toggleResults}\n                    durationValue={duration}\n                    intervalName={test}\n                  />\n                  <Typography variant=\"body1\">{unit}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n      <SearchTable\n        title=\"\"\n        columns={columns}\n        data={getTableRoutes(configRoutes)}\n        editable={{\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                // const index = oldData.tableData.id;\n\n                resolve();\n              }, 1000);\n            }),\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                // const index = oldData.tableData.id;\n\n                resolve();\n              }, 1000);\n            })\n        }}\n      />\n    </>\n  );\n};\n\nexport default Config;\n","const truncate = (str: string, n: number) => {\n  return (str.length > n) ? str.substr(0, n-1) + '...' : str;\n};\n\nexport { truncate };","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface CPUUsageProps {\n  cpuMetrics: chartData[];\n}\n\nconst CPUUsage: FC<CPUUsageProps> = ({ cpuMetrics }) => {\n  const dataFormatted = cpuMetrics;\n  const series = [\n    {\n      name: 'CPU',\n      data: dataFormatted\n    }\n  ];\n  const options = {\n    chart: {\n      type: 'area',\n      xaxis: {\n        type: 'category',\n        categories: [],\n        labels: {\n          show: true,\n          rotate: 45,\n          rotateAlways: true,\n          hideOverlappingLabels: true,\n          trim: true\n        }\n      },\n      background: '#fff'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 1\n    },\n    subtitle: {\n      text: 'CPU usage (in percent)',\n      align: 'center'\n    },\n    fill: {\n      opacity: 1,\n      type: 'gradient',\n      gradient: {\n        shade: 'dark',\n        type: 'vertical',\n        shadeIntensity: 0.6,\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 0.2\n      }\n    }\n  };\n\n  return (\n    <>\n      <Chart series={series} options={options} height=\"300\" type=\"area\" />\n    </>\n  );\n};\n\nexport default React.memo(CPUUsage);\n","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface MemoryUsagePercentProps {\n  memoryUsagePercentMetrics: chartData[];\n}\n\nconst MemoryUsagePercent: FC<MemoryUsagePercentProps> = ({\n  memoryUsagePercentMetrics\n}) => {\n  const dataFormatted = memoryUsagePercentMetrics;\n  const series = [\n    {\n      name: 'Memory',\n      data: dataFormatted\n    }\n  ];\n  const options = {\n    chart: {\n      type: 'area',\n      background: '#fff'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 1\n    },\n    subtitle: {\n      text: 'Memory (RAM) usage  (in percent)',\n      align: 'center'\n    },\n    fill: {\n      opacity: 1,\n      type: 'gradient',\n      gradient: {\n        shade: 'dark',\n        type: 'vertical',\n        shadeIntensity: 0.6,\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 0.2\n      }\n    }\n  };\n\n  return (\n    <>\n      <Chart series={series} options={options} height=\"300\" type=\"area\" />\n    </>\n  );\n};\n\nexport default React.memo(MemoryUsagePercent);\n","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface DiskUsageProps {\n  diskIO: chartData[];\n  cache: chartData[];\n}\n\nconst DiskUsage: FC<DiskUsageProps> = ({ diskIO, cache }) => {\n  const seriesDiskIO = [\n    {\n      name: 'Disk IO in bytes (+ve means write / -ve means read)',\n      data: diskIO\n    }\n  ];\n  const seriesCache = [\n    {\n      name: 'Cache (in bytes)',\n      data: cache\n    }\n  ];\n\n  const optionsDiskIO = {\n    chart: {\n      type: 'area',\n      background: '#fff'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 1\n    },\n    subtitle: {\n      text: 'Disk IO in bytes (+ve means write / -ve means read)',\n      align: 'center'\n    }\n  };\n  const optionsCache = {\n    chart: {\n      type: 'area',\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      },\n      background: '#fff'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 1\n    },\n    subtitle: {\n      text: 'Cache (in bytes)',\n      align: 'center'\n    },\n    fill: {\n      opacity: 1,\n      type: 'gradient',\n      gradient: {\n        shade: 'dark',\n        type: 'vertical',\n        shadeIntensity: 0.6,\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 0.2\n      }\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6\">\n        <Chart\n          series={seriesDiskIO}\n          options={optionsDiskIO}\n          height=\"300\"\n          type=\"area\"\n        />\n      </div>\n      <div className=\"col-md-6\">\n        <Chart\n          series={seriesCache}\n          options={optionsCache}\n          height=\"300\"\n          type=\"area\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DiskUsage);\n","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface MemoryDetailsProps {\n  availableBytes: chartData[];\n  freeBytes: chartData[];\n  totalBytes: chartData[];\n  usedBytes: chartData[];\n}\n\nconst MemoryDetails: FC<MemoryDetailsProps> = ({\n  availableBytes,\n  freeBytes,\n  totalBytes,\n  usedBytes\n}) => {\n  const series = [\n    {\n      name: 'Available',\n      data: availableBytes\n    },\n    {\n      name: 'Free',\n      data: freeBytes\n    },\n    {\n      name: 'Total',\n      data: totalBytes\n    },\n    {\n      name: 'Used',\n      data: usedBytes\n    }\n  ];\n  const options = {\n    chart: {\n      type: 'area',\n      background: '#fff'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 1\n    },\n    subtitle: {\n      text: 'Memory (RAM) details (in kilo-bytes)',\n      align: 'center'\n    },\n    fill: {\n      opacity: 1,\n      type: 'gradient',\n      gradient: {\n        shade: 'dark',\n        type: 'vertical',\n        shadeIntensity: 0.1,\n        inverseColors: true,\n        opacityFrom: 0.8,\n        opacityTo: 0.2\n      }\n    }\n  };\n\n  return (\n    <>\n      <Chart series={series} options={options} height=\"500\" type=\"area\" />\n    </>\n  );\n};\n\nexport default React.memo(MemoryDetails);\n","import { useState, useEffect } from 'react';\n\nexport type APIResponse<T> = { status: string; data?: T };\n\nexport interface FetchState<T> {\n  response: APIResponse<T>;\n  error?: Error;\n  isLoading: boolean;\n}\n\nexport const useFetch = <T extends {}>(url: string, options?: RequestInit): FetchState<T> => {\n  const [response, setResponse] = useState<APIResponse<T>>({ status: 'start fetching' });\n  const [error, setError] = useState<Error>();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [requestSent, setRequestSent] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        setRequestSent(true);\n        const res = await fetch(url, { cache: 'no-cache', credentials: 'same-origin', ...options });\n        if (!res.ok) {\n          setIsLoading(false);\n          setRequestSent(false);\n          throw new Error(res.statusText);\n        }\n        const json = (await res.json()) as APIResponse<T>;\n        setResponse(json);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    if (!requestSent) {\n      setTimeout(() => {\n        fetchData();\n      }, 1000);\n    }\n  }, [url, options, requestSent]);\n  return { response, error, isLoading };\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport CPUUsage from './CPUUsage';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport MemoryUsagePercent from './MemoryUsage';\nimport DiskUsage from './Disk';\nimport MemoryDetails from './MemoryDetails';\nimport TimeInstance, { formatTime } from '../../utils/brt';\nimport { HOST_IP } from '../../utils/types';\nimport { APIResponse, init } from '../../utils/service';\nimport { QueryResponse, QueryValues, chartData } from '../../utils/queryTypes';\n\nexport function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nexport function a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst segregateMetrics = (metricValues: QueryValues[]) => {\n  const cpuUsageSlice: chartData[] = [];\n\n  const diskSliceCache: chartData[] = [];\n  const diskSliceDiskIO: chartData[] = [];\n\n  const memorySliceAvailableBytes: chartData[] = [];\n  const memorySliceFreeBytes: chartData[] = [];\n  const memorySliceTotalBytes: chartData[] = [];\n  const memorySliceUsedBytes: chartData[] = [];\n\n  const memoryUsedPercentSlice: chartData[] = [];\n\n  for (const metric of metricValues) {\n    cpuUsageSlice.push({\n      y: metric.value.cpuTotalUsage,\n      x: formatTime(metric.timestamp)\n    });\n\n    diskSliceCache.push({\n      y: metric.value.disk.cached,\n      x: formatTime(metric.timestamp)\n    });\n    diskSliceDiskIO.push({\n      y: metric.value.disk.diskIO,\n      x: formatTime(metric.timestamp)\n    });\n\n    memorySliceAvailableBytes.push({\n      y: metric.value.memory.availableBytes,\n      x: formatTime(metric.timestamp)\n    });\n    memorySliceFreeBytes.push({\n      y: metric.value.memory.freeBytes,\n      x: formatTime(metric.timestamp)\n    });\n    memorySliceTotalBytes.push({\n      y: metric.value.memory.totalBytes,\n      x: formatTime(metric.timestamp)\n    });\n    memorySliceUsedBytes.push({\n      y: metric.value.memory.usedBytes,\n      x: formatTime(metric.timestamp)\n    });\n\n    memoryUsedPercentSlice.push({\n      y: metric.value.memory.usedPercent,\n      x: formatTime(metric.timestamp)\n    });\n  }\n  return {\n    cpuUsageSlice,\n    diskSliceCache,\n    diskSliceDiskIO,\n    memorySliceAvailableBytes,\n    memorySliceFreeBytes,\n    memorySliceTotalBytes,\n    memorySliceUsedBytes,\n    memoryUsedPercentSlice\n  };\n};\n\ninterface SystemMetricsProps {\n  showLoader(status: boolean): any;\n}\n\nconst SystemMetrics: FC<SystemMetricsProps> = ({ showLoader }) => {\n  const classes = useStyles();\n  const [response, setResponse] = useState(init());\n  const [error, setError] = useState('');\n  const [value, setValue] = React.useState(0);\n  const endTimestamp = new Date().getTime() * 1000000 - TimeInstance.Hour;\n\n  useEffect(() => {\n    showLoader(true);\n  }, [showLoader]);\n  useEffect(() => {\n    fetch(\n      `${HOST_IP}/query?timeSeriesPath=storage/system&endTimestamp=${endTimestamp}`\n    )\n      .then(res => res.json())\n      .then(\n        (response: APIResponse<QueryResponse>) => {\n          setResponse(response);\n        },\n        (err: string) => {\n          setError(err);\n        }\n      );\n    // eslint-disable-next-line\n  }, []);\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n\n  if (error) {\n    showLoader(false);\n    return <Alert severity=\"error\">Unable to reach the service: error</Alert>;\n  }\n  if (!response.data.values) {\n    return (\n      <>\n        <Alert severity=\"info\">Fetching data from sources</Alert>\n      </>\n    );\n  }\n\n  const responseInFormat = segregateMetrics(response.data.values);\n  showLoader(false);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\" style={{ marginBottom: '1%' }}>\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"secondary\"\n            >\n              <Tab label=\"System\" {...a11yProps(0)} />\n              <Tab label=\"Disk\" {...a11yProps(1)} />\n              <Tab label=\"Memory details\" {...a11yProps(2)} />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={value} index={0}>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <CPUUsage cpuMetrics={responseInFormat.cpuUsageSlice} />\n              </div>\n              <div className=\"col-md-6\">\n                <MemoryUsagePercent\n                  memoryUsagePercentMetrics={\n                    responseInFormat.memoryUsedPercentSlice\n                  }\n                />\n              </div>\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <div className=\"col-md-12\">\n              <DiskUsage\n                diskIO={responseInFormat.diskSliceDiskIO}\n                cache={responseInFormat.diskSliceCache}\n              />\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <div className=\"col-md-12\">\n              <MemoryDetails\n                availableBytes={responseInFormat.memorySliceAvailableBytes}\n                freeBytes={responseInFormat.memorySliceFreeBytes}\n                totalBytes={responseInFormat.memorySliceTotalBytes}\n                usedBytes={responseInFormat.memorySliceUsedBytes}\n              />\n            </div>\n          </TabPanel>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SystemMetrics;\n","import { useFetch } from './useFetch';\nimport { HOST_IP } from './types';\n\nexport interface APIResponse<T> {\n  status: string;\n  data: T;\n}\n\nexport const init = (): {status: string, data: any} => {\n  return {\n    status: '',\n    data: {}\n  }\n}\n\nconst GetSystemData = () => {\n\n  const { response, error } = useFetch(\n    `${HOST_IP}/query?timeSeriesPath=storage/system`\n  );\n\n  if (response) return response\n  else return error\n\n};\n\nconst GetServiceState = () => {\n\n  const { response, error } = useFetch(\n    `${HOST_IP}/service-state`\n  );\n\n  if (response) return response\n  else return error\n\n};\n\n\n\nexport { GetSystemData, GetServiceState }","import React, { FC, useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport Alert from '@material-ui/lab/Alert';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { APIResponse, init } from '../../utils/service';\nimport { QueryResponse, QueryValues, chartData } from '../../utils/queryTypes';\nimport { HOST_IP } from '../../utils/types';\nimport TimeInstance, { formatTime } from '../../utils/brt';\nimport { useStyles, TabPanel, a11yProps } from './SystemMetrics';\n\nconst format = (data: QueryValues[] | any) => {\n  const cerr: chartData[] = [];\n  const cwarn: chartData[] = [];\n  const cevents: chartData[] = [];\n  const ckerr: chartData[] = [];\n  const ckwarn: chartData[] = [];\n  const ckevents: chartData[] = [];\n  if (!data) {\n    return {\n      cerr,\n      cwarn,\n      cevents,\n      ckerr,\n      ckwarn,\n      ckevents\n    };\n  }\n  for (const value of data) {\n    cerr.push({\n      y: value.value.cerr,\n      x: formatTime(value.timestamp)\n    });\n    cwarn.push({\n      y: value.value.cwarn,\n      x: formatTime(value.timestamp)\n    });\n    cevents.push({\n      y: value.value.cevents,\n      x: formatTime(value.timestamp)\n    });\n    ckerr.push({\n      y: value.value.ckerr,\n      x: formatTime(value.timestamp)\n    });\n    ckwarn.push({\n      y: value.value.ckwarn,\n      x: formatTime(value.timestamp)\n    });\n    ckevents.push({\n      y: value.value.ckevents,\n      x: formatTime(value.timestamp)\n    });\n  }\n  return {\n    cerr,\n    cwarn,\n    cevents,\n    ckerr,\n    ckwarn,\n    ckevents\n  };\n};\n\nconst JournalMetrics: FC<{}> = () => {\n  const classes = useStyles();\n  const [response, setResponse] = useState(init());\n  const [error, setError] = useState('');\n  const endTimestamp = new Date().getTime() * 1000000 - TimeInstance.Hour;\n  const [value, setValue] = React.useState(0);\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n  useEffect(() => {\n    fetch(\n      `${HOST_IP}/query?timeSeriesPath=storage/journal&endTimestamp=${endTimestamp}`\n    )\n      .then(res => res.json())\n      .then(\n        (response: APIResponse<QueryResponse>) => {\n          setResponse(response);\n        },\n        (err: string) => {\n          setError(err);\n        }\n      );\n    // eslint-disable-next-line\n  }, []);\n  if (error) {\n    return <Alert severity=\"error\">Unable to reach the service: error</Alert>;\n  }\n  if (!response.data) {\n    return <Alert severity=\"info\">Fetching data from sources</Alert>;\n  }\n  const data = format(response.data.values);\n\n  const seriesSystemd = [\n    {\n      name: 'Errors',\n      data: data.cerr\n    },\n    {\n      name: 'Warnings',\n      data: data.cwarn\n    },\n    {\n      name: 'Events',\n      data: data.cevents\n    }\n  ];\n  const seriesKernel = [\n    {\n      name: 'Errors',\n      data: data.ckerr\n    },\n    {\n      name: 'Warnings',\n      data: data.ckwarn\n    },\n    {\n      name: 'Events',\n      data: data.ckevents\n    }\n  ];\n  const optionsSystemd = {\n    chart: {\n      type: 'area',\n      background: '#fff'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 1\n    },\n    subtitle: {\n      text: 'Systemd services',\n      align: 'center'\n    },\n    fill: {\n      opacity: 1,\n      type: 'gradient',\n      gradient: {\n        shade: 'dark',\n        type: 'vertical',\n        shadeIntensity: 0.3,\n        inverseColors: true,\n        opacityFrom: 0.8,\n        opacityTo: 0.2\n      }\n    }\n  };\n  const optionsKernel = {\n    chart: {\n      type: 'area',\n      background: '#fff'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 1\n    },\n    subtitle: {\n      text: 'Kernel',\n      align: 'center'\n    },\n    fill: {\n      opacity: 1,\n      type: 'gradient',\n      gradient: {\n        shade: 'dark',\n        type: 'vertical',\n        shadeIntensity: 0.3,\n        inverseColors: true,\n        opacityFrom: 0.8,\n        opacityTo: 0.2\n      }\n    }\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} indicatorColor=\"secondary\">\n          <Tab label=\"Kernel\" {...a11yProps(0)} />\n          <Tab label=\"Systemd\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Chart\n              series={seriesKernel}\n              options={optionsKernel}\n              height=\"300\"\n              type=\"area\"\n            />\n          </div>\n        </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Chart\n              series={seriesSystemd}\n              options={optionsSystemd}\n              height=\"300\"\n              type=\"area\"\n            />\n          </div>\n        </div>\n      </TabPanel>\n    </div>\n  );\n};\n\nexport default JournalMetrics;\n","import React, { FC } from 'react';\nimport SystemMetrics from './SystemMetrics';\nimport JournalMetrics from './JournalMetrics';\nimport { Card, CardContent } from '@material-ui/core';\n\ninterface DashboardProps {\n  updateLoader(status: boolean): void;\n}\n\nconst Dashboard: FC<DashboardProps> = ({ updateLoader }) => {\n  updateLoader(true);\n  return (\n    <Card>\n      <CardContent>\n        <h4>Dashboard</h4>\n        <hr />\n        <SystemMetrics showLoader={updateLoader} />\n        <hr />\n        <JournalMetrics />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Dashboard;\n","import React, { FC } from 'react';\n\nconst FloodPing: FC<{}> = () => {\n  return <div>FloodPing page</div>;\n};\n\nexport default FloodPing;\n","import React, { FC, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { Badge } from 'reactstrap';\n\ninterface TypeProps {\n  slice: string[];\n  getRequestType(type: string);\n}\n\nconst Type: FC<TypeProps> = ({ slice, getRequestType }) => {\n  const [showDone, setShowDone] = useState(false);\n  const [selectedRequest, setSelectedRequest] = useState('');\n  const sendType = (type: string): void => {\n    setShowDone(true);\n    setSelectedRequest(type);\n    getRequestType(type);\n  };\n  return (\n    <div>\n      <ButtonGroup\n        color=\"primary\"\n        variant=\"contained\"\n        aria-label=\"outlined primary button group\"\n      >\n        {slice.map((type: string) => (\n          <Button onClick={() => sendType(type.toUpperCase())}>\n            {type.toUpperCase()}\n          </Button>\n        ))}\n      </ButtonGroup>\n      {showDone ? (\n        <>\n          <DoneIcon\n            style={{ marginLeft: '3%' }}\n            fontSize=\"large\"\n            color=\"secondary\"\n          />{' '}\n          <Badge color=\"success\" style={{ fontSize: '13px', marginLeft: '1%' }}>\n            {selectedRequest}\n          </Badge>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Type;\n","import React, { FC, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\ninterface GridBodyProps {\n  name: string;\n  updateParent: React.Dispatch<React.SetStateAction<pair[] | undefined>>;\n}\n\nexport interface pair {\n  key: string;\n  value: string;\n}\n\nconst GridBody: FC<GridBodyProps> = ({ name, updateParent }) => {\n  const [header, setHeader] = useState<pair[]>([{ key: '', value: '' }]);\n  const [bodyValue, setBodyValue] = useState<string>('');\n  const updateItems = (key: string, value: string, i: number) => {\n    if (key === '') {\n      header[i].value = value;\n    }\n    if (value === '') {\n      header[i].key = key;\n    }\n    if (i === header.length - 1) {\n      header.push({ key: '', value: '' });\n    }\n    setBodyValue(JSON.stringify(header, null, 4));\n    updateParent(header);\n  };\n  const updateBody = (content: string) => {\n    setBodyValue(content);\n    const inJSON = JSON.parse(content) as pair[];\n    header.length = 0;\n    for (const pair of inJSON) {\n      header.push({\n        key: pair.key,\n        value: pair.value\n      });\n    }\n    setHeader(header);\n    updateParent(header);\n  };\n  return (\n    <div>\n      <h6 style={{ fontWeight: 'bold' }}>{name}</h6>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-md-8\" style={{ display: 'inline-grid' }}>\n          {header.map((head, index) => (\n            <div className=\"row\" style={{ margin: '3px' }} key={index}>\n              <div className=\"col-md-6\">\n                <TextField\n                  id=\"outlined-basic\"\n                  size=\"small\"\n                  label=\"Key\"\n                  value={head.key}\n                  style={{ width: '100%' }}\n                  variant=\"outlined\"\n                  onChange={e => updateItems(e.target.value, '', index)}\n                />\n              </div>\n              <div className=\"col-md-6\">\n                <TextField\n                  id=\"outlined-basic\"\n                  size=\"small\"\n                  value={head.value}\n                  style={{ width: '100%' }}\n                  label=\"value\"\n                  variant=\"outlined\"\n                  onChange={e => updateItems('', e.target.value, index)}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"col-md-4\">\n          <TextField\n            id=\"outlined-multiline-flexible\"\n            label=\"JSONified\"\n            multiline\n            rows={header.length * 3}\n            value={bodyValue}\n            variant=\"outlined\"\n            onChange={e => updateBody(e.target.value)}\n            style={{\n              minHeight: '100%',\n              width: '100%',\n              backgroundColor: '#f9f9f9'\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GridBody;\n","import React, { FC, useState, ChangeEvent } from 'react';\nimport Type from './Groups';\nimport GridBody, { pair } from './GridBody';\nimport { Card, CardContent } from '@material-ui/core';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport { HOST_IP } from '../../utils/types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\ninterface AlertSnackBar {\n  severity: 'success' | 'error' | 'warning' | 'info';\n  message: string;\n}\n\nconst requestsTypeSupported = ['get', 'post', 'put', 'delete', 'patch'];\n\nconst hyperTexts = ['https', 'http', 'manual'];\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Input: FC<{}> = () => {\n  const [requestType, setRequestType] = useState('');\n  const [, setHyperTextType] = useState('');\n\n  const [valueURLRoute, setValueURLRoute] = useState('');\n\n  const [applyHeader, setApplyHeader] = useState<boolean>(false);\n  const [headerValues, setHeaderValues] = useState<pair[]>();\n\n  const [applyParams, setApplyParams] = useState<boolean>(false);\n  const [paramsValues, setParamsValues] = useState<pair[]>();\n\n  const [applyBody, setApplyBody] = useState<boolean>(false);\n  const [bodyValues, setBodyValues] = useState<pair[]>();\n\n  const [testInputResponse, setTestInputResponse] = useState<string>('');\n\n  const [openSnackBar, setOpenSnackBar] = useState<AlertSnackBar>({\n    severity: 'info',\n    message: ''\n  });\n  const [showSnackBar, setShowSnackBar] = useState<boolean>(false);\n  const [open, setOpen] = useState(false);\n  const [showResponseButton, setShowResponseButton] = useState<boolean>(false);\n\n  const getRequestType = (type: string) => {\n    setRequestType(type);\n  };\n  const getHyperTextType = (type: string) => {\n    setHyperTextType(type);\n    type = type.toLowerCase();\n    if (type !== 'manual') {\n      setValueURLRoute(`${type}://`);\n    } else {\n      setValueURLRoute('');\n    }\n  };\n  const updateURLRouteValue = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setValueURLRoute(e.target.value);\n  };\n  const handleCancel = () => {\n    setShowResponseButton(false);\n    setRequestType('');\n    setHyperTextType('');\n    setValueURLRoute('');\n    setHeaderValues([]);\n    setParamsValues([]);\n    setBodyValues([]);\n    setApplyHeader(false);\n    setApplyParams(false);\n    setApplyBody(false);\n  };\n  const testURL = () => {\n    const params = {};\n    const headers = {};\n    const body = {};\n    setShowResponseButton(false);\n    if (headerValues !== undefined) {\n      for (const h of headerValues) {\n        headers[h.key] = h.value;\n      }\n    } else {\n      setHeaderValues([]);\n    }\n\n    if (paramsValues !== undefined) {\n      for (const p of paramsValues) {\n        params[p.key] = p.value;\n      }\n    } else {\n      setParamsValues([]);\n    }\n\n    if (bodyValues !== undefined) {\n      for (const b of bodyValues) {\n        body[b.key] = b.value;\n      }\n    } else {\n      setBodyValues(bodyValues);\n    }\n\n    fetch(`${HOST_IP}/quick-input`, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        method: requestType,\n        url: valueURLRoute,\n        params: params,\n        headers: headers,\n        body: body\n      })\n    })\n      .then(response => response.json())\n      .then(\n        response => {\n          try {\n            const inJSON = JSON.stringify(\n              JSON.parse(response['data']),\n              null,\n              4\n            );\n            setTestInputResponse(inJSON);\n          } catch (e) {\n            setTestInputResponse(response['data']);\n          }\n          fetch(`${HOST_IP}/add-route`, {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              method: requestType,\n              url: valueURLRoute,\n              params: params,\n              headers: headers,\n              body: body\n            })\n          })\n            .then(response => response.json())\n            .then(\n              () => {\n                setOpenSnackBar({\n                  severity: 'success',\n                  message: 'success'\n                });\n                setShowSnackBar(true);\n              },\n              err => {\n                console.error(err);\n                setOpenSnackBar({\n                  severity: 'error',\n                  message:\n                    'error occurred: please contact the dev team or open a issue at https://github.com/zairza-cetb/bench-routes'\n                });\n                setShowSnackBar(true);\n              }\n            );\n          setShowResponseButton(true);\n        },\n        err => {\n          console.error(err);\n          setOpenSnackBar({\n            severity: 'error',\n            message:\n              'error occurred: please contact the dev team or open a issue at https://github.com/zairza-cetb/bench-routes'\n          });\n          setShowSnackBar(true);\n        }\n      );\n  };\n  return (\n    <Card>\n      <CardContent>\n        <h3 style={{ marginBottom: '2%' }}>Quick Input</h3>\n        <h6 style={{ color: 'cadetblue' }}>\n          <InfoOutlinedIcon /> Input routes into bench-routes for monitoring\n        </h6>\n        <hr />\n        <div style={{ margin: '2% 0% 2% 0%' }}>\n          <h6>HTTP methods</h6>\n          <Type slice={requestsTypeSupported} getRequestType={getRequestType} />\n        </div>\n        <div style={{ margin: '2% 0% 2% 0%' }}>\n          <h6>URL</h6>\n          <Type slice={hyperTexts} getRequestType={getHyperTextType} />\n          <TextField\n            id=\"outlined-basic\"\n            style={{ margin: '3vh 0vh 0vh 1vh', width: '100%' }}\n            value={valueURLRoute}\n            onChange={updateURLRouteValue}\n            size=\"medium\"\n            label=\"URL route\"\n            variant=\"outlined\"\n          />\n        </div>\n        <div\n          style={{\n            border: '1px solid #c4c4c4',\n            borderRadius: '1vh',\n            padding: '2vh'\n          }}\n        >\n          <h6>Apply</h6>\n          <hr />\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                checked={applyHeader}\n                onClick={() => setApplyHeader(!applyHeader)}\n              />\n            }\n            label=\"Header\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                checked={applyParams}\n                onClick={() => setApplyParams(!applyParams)}\n              />\n            }\n            label=\"Params\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                checked={applyBody}\n                onClick={() => setApplyBody(!applyBody)}\n              />\n            }\n            label=\"Body\"\n          />\n        </div>\n        <div style={{ margin: '2%' }}>\n          {applyHeader ? (\n            <GridBody name=\"Header\" updateParent={setHeaderValues} />\n          ) : null}\n          {applyParams ? (\n            <GridBody name=\"Params\" updateParent={setParamsValues} />\n          ) : null}\n          {applyBody ? (\n            <GridBody name=\"Body\" updateParent={setBodyValues} />\n          ) : null}\n        </div>\n        <div>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => testURL()}>\n            Test & Save\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ marginLeft: '1%' }}\n            onClick={() => handleCancel()}\n          >\n            Cancel\n          </Button>\n          {showResponseButton ? (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              style={{ marginLeft: '1%' }}\n              onClick={() => setOpen(true)}\n            >\n              Show Response\n            </Button>\n          ) : null}\n        </div>\n        <Dialog aria-labelledby=\"customized-dialog-title\" open={open}>\n          <DialogTitle id=\"customized-dialog-title\">Response</DialogTitle>\n          <DialogContent dividers>\n            <Card>\n              <CardContent>\n                <pre style={{ fontWeight: 'bold' }}>{testInputResponse}</pre>\n              </CardContent>\n            </Card>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setOpen(false)} color=\"secondary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Snackbar\n          open={showSnackBar}\n          autoHideDuration={6000}\n          onClose={() => setShowSnackBar(false)}\n        >\n          <Alert severity={openSnackBar.severity}>{openSnackBar.message}</Alert>\n        </Snackbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Input;\n","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface JitterProps {\n  value: chartData[];\n}\n\nconst Jitter: FC<JitterProps> = ({ value }) => {\n  const series = [\n    {\n      name: 'min',\n      data: value\n    }\n  ];\n  const options = {\n    chart: {\n      type: 'area',\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      },\n      background: '#fff'\n    }\n  };\n  return <Chart series={series} options={options} height=\"300\" />;\n};\n\nexport default Jitter;\n","// TODO: improved URL filtering\nconst filterUrl = (url: string) => {\n    let res;\n    if (url.startsWith('https://www.')) {\n      res = url.replace('https://www.', '');\n    } else if (url.startsWith('https://')) {\n      res = url.replace('https://', '');\n    } else if (url.startsWith('http://www.')) {\n      res = url.replace('http://www.', '');\n    } else if (url.startsWith('http://')) {\n      res = url.replace('http://', '');\n    }\n    return res;\n}\n\nexport {filterUrl}","import React, { FC, useState, useEffect } from 'react';\nimport { useFetch } from '../../utils/useFetch';\nimport { service_states, HOST_IP } from '../../utils/types';\nimport { Card, CardContent, TextField } from '@material-ui/core';\nimport {\n  RoutesSummary,\n  QueryResponse,\n  chartData,\n  APIQueryResponse\n} from '../../utils/queryTypes';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Alert from '@material-ui/lab/Alert';\nimport { formatTime } from '../../utils/brt';\nimport Jitter from '../Monitoring/Jitter';\nimport { filterUrl } from '../../utils/filterUrl';\n\nconst format = (datas: QueryResponse) => {\n  const jitter: chartData[] = [];\n\n  for (const value of datas.values) {\n    jitter.push({\n      y: value.value.value,\n      x: formatTime(value.timestamp)\n    });\n  }\n\n  return {\n    jitter\n  };\n};\n\ninterface showChartsDataParam {\n  jitter: chartData[];\n}\n\nconst JitterModule: FC<{}> = () => {\n  const [routesDetails, setRoutesDetails] = useState<RoutesSummary>();\n  const [value] = useState(routesDetails?.testServicesRoutes[0]);\n  const [inputValue, setInputValue] = useState('');\n  const [showCharts, setShowCharts] = useState(false);\n  const [jitterData, setJitterData] = useState<showChartsDataParam>();\n\n  const { response, error } = useFetch<service_states>(\n    `${HOST_IP}/service-state`\n  );\n\n  useEffect(() => {\n    fetch(`${HOST_IP}/routes-summary`)\n      .then(res => res.json())\n      .then((response: { status: string; data: RoutesSummary }) => {\n        setRoutesDetails(response.data);\n      });\n  }, []);\n\n  async function getChartsData(v: any) {\n    const res = filterUrl(v);\n    try {\n      const response = await fetch(\n        `${HOST_IP}/query?timeSeriesPath=storage/jitter/chunk_jitter_${res}`\n      );\n      const matrix = (await response.json()) as APIQueryResponse;\n      var formatdata = format(matrix.data);\n      setJitterData(formatdata);\n      setShowCharts(true);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  if (error) {\n    return <Alert severity=\"error\">Unable to reach the service: error</Alert>;\n  }\n  if (!response.data) {\n    return <Alert severity=\"info\">Fetching from sources</Alert>;\n  }\n\n  // const states: service_states = response.data;\n  const options =\n    routesDetails?.testServicesRoutes !== undefined\n      ? routesDetails.testServicesRoutes\n      : ['Please fill routes'];\n\n  return (\n    <Card>\n      <CardContent>\n        <div>\n          <h4>Jitter</h4>\n          <div style={{ float: 'right', marginTop: '-45px' }}>\n            <Autocomplete\n              value={value}\n              onChange={(event, newValue) => {}}\n              inputValue={inputValue}\n              onInputChange={(event, newInputValue) => {\n                setInputValue(newInputValue);\n                getChartsData(newInputValue);\n              }}\n              id=\"controllable-states-demo\"\n              options={options}\n              style={{ width: 300 }}\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  label=\"Select Route\"\n                  variant=\"outlined\"\n                />\n              )}\n            />\n          </div>\n        </div>\n        <br />\n        <hr />\n        <div>\n          {jitterData !== undefined && showCharts ? (\n            <Jitter value={jitterData.jitter} />\n          ) : null}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default JitterModule;\n","interface Column {\n  label: string;\n  minWidth: number;\n  align: 'right' | 'center' | 'left';\n  format?: (value: number) => string;\n}\n\nexport const columns: Column[] = [\n  { label: 'Name', minWidth: 170, align: 'left' },\n  { label: 'Ping', minWidth: 100, align: 'center' },\n  {\n    label: 'Jitter',\n    minWidth: 170,\n    align: 'center',\n    format: (value: number) => value.toLocaleString('en-US')\n  },\n  {\n    label: 'Response time',\n    minWidth: 170,\n    align: 'center',\n    format: (value: number) => value.toLocaleString('en-US')\n  },\n  {\n    label: 'Response length',\n    minWidth: 170,\n    align: 'center',\n    format: (value: number) => value.toFixed(2)\n  },\n  {\n    label: 'Status',\n    minWidth: 170,\n    align: 'center',\n    format: (value: number) => value.toFixed(2)\n  },\n  {\n    label: '',\n    minWidth: 10,\n    align: 'center',\n    format: (value: number) => value.toFixed(2)\n  }\n];\n","import React, { FC, useState, useEffect } from 'react';\nimport { HOST_IP } from '../../utils/types';\nimport {\n  TimeSeriesPath,\n  MatrixResponse,\n  RouteDetails\n} from '../../utils/queryTypes';\nimport { columns } from './Columns';\nimport TimeInstance from '../../utils/brt';\n\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport WarningOutlinedIcon from '@material-ui/icons/WarningOutlined';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Badge } from 'reactstrap';\n\ntype APIResponse<MatrixResponse> = { status: string; data: MatrixResponse };\n\ninterface MatrixProps {\n  timeSeriesPath: TimeSeriesPath[];\n  showRouteDetails(status: boolean, details: RouteDetails): void;\n}\n\ninterface ElementProps {\n  timeSeriesPath: TimeSeriesPath;\n  showRouteDetails(status: boolean, details: RouteDetails): void;\n}\n\nconst round = (n: string): number => {\n  const num = parseInt(n, 10);\n  return Math.round(num * 10) / 10;\n};\n\nconst Pad: FC<{}> = () => <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>;\n\nconst Element: FC<ElementProps> = ({ timeSeriesPath, showRouteDetails }) => {\n  const [data, setData] = useState<MatrixResponse>();\n  const [trigger, setTrigger] = useState<number>(0);\n  const [updating, setUpdating] = useState<boolean>(true);\n  const [warning, showWarning] = useState<boolean>(false);\n  const endTimestamp = new Date().getTime() * 1000000 - TimeInstance.Hour;\n\n  const fetchTimeSeriesDetails = async (instance: TimeSeriesPath) => {\n    const monitoringDetails = new Promise<RouteDetails>((resolve, reject) => {\n      async function fetchDetails() {\n        try {\n          const response = await fetch(\n            `${HOST_IP}/query-matrix?routeNameMatrix=${instance.path.matrixName}&endTimestamp=${endTimestamp}`\n          );\n          const matrix = (await response.json()) as APIResponse<RouteDetails>;\n          resolve(matrix.data);\n        } catch (e) {\n          console.error(e);\n          showWarning(true);\n          reject(e);\n        }\n      }\n      fetchDetails();\n    });\n\n    const details = await monitoringDetails;\n    showRouteDetails(true, details);\n  };\n\n  useEffect(() => {\n    async function fetchMatrix(name: string) {\n      try {\n        setUpdating(true);\n        const response = await fetch(\n          `${HOST_IP}/query-matrix?routeNameMatrix=${name}`\n        );\n        const inMatrixResponse = (await response.json()) as APIResponse<\n          MatrixResponse\n        >;\n        setData(inMatrixResponse.data);\n        setTimeout(() => {\n          setUpdating(false);\n          showWarning(false);\n        }, 1000);\n      } catch (e) {\n        console.error(e);\n        showWarning(true);\n        return null;\n      }\n    }\n    fetchMatrix(timeSeriesPath.path.matrixName);\n  }, [trigger, timeSeriesPath.path.matrixName]);\n\n  if (!data) {\n    return (\n      <TableRow className=\"table-data-row\" key={timeSeriesPath.path.matrixName}>\n        <TableCell\n          style={{ width: 170, fontSize: 16, overflowX: 'hidden' }}\n          align=\"left\"\n        >\n          <Badge color=\"light\">{timeSeriesPath.name}</Badge>\n        </TableCell>\n        <TableCell\n          style={{ minWidth: 100, fontSize: 16 }}\n          align=\"center\"\n        ></TableCell>\n        <TableCell\n          style={{ minWidth: 170, fontSize: 16 }}\n          align=\"center\"\n        ></TableCell>\n        <TableCell style={{ minWidth: 170 }} align=\"center\"></TableCell>\n        <TableCell style={{ minWidth: 170 }} align=\"center\"></TableCell>\n        <TableCell\n          style={{ minWidth: 170, fontSize: 16 }}\n          align=\"center\"\n        ></TableCell>\n        <TableCell style={{ minWidth: 10, fontSize: 16 }} align=\"center\">\n          {updating ? (\n            <CircularProgress disableShrink size={15} thickness={4} />\n          ) : (\n            <Pad />\n          )}\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  setTimeout(() => {\n    setTrigger(trigger + 1);\n  }, 10 * 1000);\n\n  return (\n    <TableRow>\n      <TableCell\n        style={{ maxWidth: 240, fontSize: 16, overflowX: 'hidden' }}\n        align=\"left\"\n      >\n        <Badge color=\"light\">\n          <Tooltip title={timeSeriesPath.name}>\n            <div>{timeSeriesPath.name}</div>\n          </Tooltip>\n        </Badge>\n      </TableCell>\n      <TableCell style={{ minWidth: 100, fontSize: 16 }} align=\"center\">\n        <Badge color=\"warning\">\n          {data.ping === undefined ? (\n            '-'\n          ) : (\n            <>\n              {data.ping.values === null\n                ? '-'\n                : round(data.ping.values[0].value.avgValue)}\n            </>\n          )}{' '}\n          ms\n        </Badge>\n      </TableCell>\n      <TableCell style={{ minWidth: 120, fontSize: 16 }} align=\"center\">\n        <Badge color=\"warning\">\n          {data.jitter === undefined ? (\n            '-'\n          ) : (\n            <>\n              {data.jitter.values === null\n                ? '-'\n                : round(data.jitter.values[0].value.value)}\n            </>\n          )}{' '}\n          ms\n        </Badge>\n      </TableCell>\n      <TableCell style={{ minWidth: 150, fontSize: 16 }} align=\"center\">\n        <Badge color=\"warning\">\n          {data.monitor === undefined ? (\n            '-'\n          ) : (\n            <>\n              {' '}\n              {data.monitor.values === null\n                ? '-'\n                : data.monitor.values[0].value.delay}{' '}\n            </>\n          )}{' '}\n          ms\n        </Badge>\n      </TableCell>\n      <TableCell style={{ minWidth: 170, fontSize: 16 }} align=\"center\">\n        <Badge color=\"warning\">\n          {data.monitor === undefined ? (\n            '-'\n          ) : (\n            <>\n              {data.monitor.values === null\n                ? '-'\n                : data.monitor.values[0].value.resLength}\n            </>\n          )}\n        </Badge>\n      </TableCell>\n      <TableCell style={{ minWidth: 170, fontSize: 16 }} align=\"center\">\n        <Badge color=\"success\">{'UP'}</Badge>\n      </TableCell>\n      <TableCell style={{ minWidth: 10, fontSize: 16 }} align=\"center\">\n        {warning ? (\n          <WarningOutlinedIcon />\n        ) : updating ? (\n          // sizes are kept in accordance with the ArrowForwardIcon. Do not change them.\n          <CircularProgress disableShrink size={19} thickness={4} />\n        ) : (\n          <span onClick={() => fetchTimeSeriesDetails(timeSeriesPath)}>\n            <ArrowForwardIcon color=\"primary\" />\n          </span>\n        )}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst Matrix: FC<MatrixProps> = ({ timeSeriesPath, showRouteDetails }) => (\n  <TableContainer style={{ maxHeight: '100vh', overflowY: 'hidden' }}>\n    <Table stickyHeader>\n      <TableHead>\n        <TableRow>\n          {columns.map((column, i) => (\n            <TableCell\n              key={i}\n              align={column.align}\n              style={{\n                minWidth: column.minWidth,\n                fontWeight: 600,\n                fontSize: 15\n              }}\n            >\n              {column.label}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {timeSeriesPath.map((series, i) => (\n          <Element\n            timeSeriesPath={series}\n            showRouteDetails={showRouteDetails}\n            key={i}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n);\n\nexport default Matrix;\n","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface ResLengthProps {\n  resLength: chartData[];\n}\n\nconst ResLength: FC<ResLengthProps> = ({ resLength }) => {\n  const series = [\n    {\n      name: 'CPU',\n      data: resLength\n    }\n  ];\n  const options = {\n    chart: {\n      type: 'area',\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      },\n      background: '#fff'\n    }\n  };\n  return <Chart series={series} options={options} height=\"300\" />;\n};\n\nexport default ResLength;\n","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface DelayProps {\n  delay: chartData[];\n}\n\nconst Delay: FC<DelayProps> = ({ delay }) => {\n  const series = [\n    {\n      name: 'CPU',\n      data: delay\n    }\n  ];\n  const options = {\n    chart: {\n      type: 'area',\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      },\n      background: '#fff'\n    }\n  };\n  return <Chart series={series} options={options} height=\"300\" />;\n};\n\nexport default Delay;\n","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface PingProps {\n  min: chartData[];\n  mean: chartData[];\n  max: chartData[];\n}\n\nconst Ping: FC<PingProps> = ({ min, mean, max }) => {\n  const series = [\n    {\n      name: 'min',\n      data: min\n    },\n    {\n      name: 'mean',\n      data: mean\n    },\n    {\n      name: 'max',\n      data: max\n    }\n  ];\n  const options = {\n    chart: {\n      type: 'area',\n      xaxis: {\n        type: 'category',\n        categories: [],\n        labels: {\n          show: true,\n          rotate: 0,\n          rotateAlways: false,\n          hideOverlappingLabels: true,\n          trim: true\n        }\n      },\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      },\n      background: '#fff'\n    }\n  };\n  return <Chart series={series} options={options} height=\"300\" />;\n};\n\nexport default Ping;\n","import React, { FC } from 'react';\nimport { chartData, RouteDetails } from '../../utils/queryTypes';\nimport { formatTime } from '../../utils/brt';\nimport ResLength from './ResLength';\nimport Delay from './Delay';\nimport Ping from './Ping';\nimport Jitter from './Jitter';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\ninterface RouteDetailsProps {\n  routesChains: RouteDetails;\n  showDetails(status: boolean, details: RouteDetails): void;\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nconst format = (data: RouteDetails) => {\n  const responseDetailsDelay: chartData[] = [];\n  const responseDetailsResponse: chartData[] = [];\n  const pingMin: chartData[] = [];\n  const pingMean: chartData[] = [];\n  const pingMax: chartData[] = [];\n  const jitter: chartData[] = [];\n\n  for (const value of data.monitor.values) {\n    responseDetailsDelay.push({\n      y: value.value.delay,\n      x: formatTime(value.timestamp)\n    });\n    responseDetailsResponse.push({\n      y: value.value.resLength,\n      x: formatTime(value.timestamp)\n    });\n  }\n  for (const value of data.ping.values) {\n    pingMin.push({\n      y: value.value.minValue,\n      x: formatTime(value.timestamp)\n    });\n    pingMean.push({\n      y: value.value.avgValue,\n      x: formatTime(value.timestamp)\n    });\n    pingMax.push({\n      y: value.value.maxValue,\n      x: formatTime(value.timestamp)\n    });\n  }\n  for (const value of data.jitter.values) {\n    jitter.push({\n      y: value.value.value,\n      x: formatTime(value.timestamp)\n    });\n  }\n\n  return {\n    responseDetailsDelay,\n    responseDetailsResponse,\n    pingMin,\n    pingMean,\n    pingMax,\n    jitter\n  };\n};\n\nconst RouteDetailsComponent: FC<RouteDetailsProps> = ({\n  routesChains,\n  showDetails\n}) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n  const data = format(routesChains);\n  return (\n    <>\n      <span onClick={() => showDetails(false, routesChains)}>\n        <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\n      </span>\n      <hr />\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} indicatorColor=\"secondary\">\n          <Tab label=\"Response length\" {...a11yProps(0)} />\n          <Tab label=\"Response delay\" {...a11yProps(1)} />\n          <Tab label=\"Ping\" {...a11yProps(2)} />\n          <Tab label=\"Jitter\" {...a11yProps(3)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <ResLength resLength={data.responseDetailsResponse} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Delay delay={data.responseDetailsDelay} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Ping min={data.pingMin} mean={data.pingMean} max={data.pingMax} />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <Jitter value={data.jitter} />\n      </TabPanel>\n    </>\n  );\n};\n\nexport default RouteDetailsComponent;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useFetch } from '../../utils/useFetch';\nimport { HOST_IP } from '../../utils/types';\nimport Matrix from './Matrix';\nimport { TimeSeriesPath, RouteDetails } from '../../utils/queryTypes';\nimport RouteDetailsComponent from './RouteDetails';\nimport { Card, CardContent } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport Switch from '@material-ui/core/Switch';\n\ninterface MonitoringProps {\n  updateLoader(status: boolean): void;\n}\n\nconst ServicesState: FC<{}> = () => {\n  const [isActive, setIsActive] = useState<boolean>(false);\n  useEffect(() => {\n    fetchState();\n  }, []);\n  const fetchState = () => {\n    fetch(`${HOST_IP}/get-monitoring-services-state`)\n      .then(res => res.json())\n      .then((response: { status: string; data: string }) => {\n        if (response.data === 'active') {\n          setIsActive(true);\n        } else {\n          setIsActive(false);\n        }\n      });\n  };\n  const updateServicesState = () => {\n    fetch(\n      `${HOST_IP}/update-monitoring-services-state?state=${\n        isActive ? 'stop' : 'start'\n      }`\n    )\n      .then(res => res.json())\n      .then((response: boolean) => {\n        if (response) {\n          setIsActive(!isActive);\n        }\n      });\n  };\n  return (\n    <Switch\n      checked={isActive}\n      color=\"primary\"\n      onChange={() => updateServicesState()}\n    />\n  );\n};\n\nconst Monitoring: FC<MonitoringProps> = ({ updateLoader }) => {\n  const { response, error } = useFetch<TimeSeriesPath[]>(\n    `${HOST_IP}/get-route-time-series`\n  );\n  const [showRouteDetails, setShowRouteDetails] = useState<boolean>(false);\n  const [routeDetailsData, setRouteDetailsData] = useState<RouteDetails>();\n  const showDetails = (status: boolean, details: RouteDetails): void => {\n    setShowRouteDetails(status);\n    setRouteDetailsData(details);\n  };\n  useEffect(() => {\n    updateLoader(true);\n  }, [updateLoader]);\n  if (error) {\n    return (\n      <Card>\n        <CardContent>\n          <h4>Monitoring</h4>\n          <hr />\n          <Alert severity=\"error\">Unable to reach the service: error</Alert>\n        </CardContent>\n      </Card>\n    );\n  }\n  if (!response.data) {\n    return (\n      <Card>\n        <CardContent>\n          <h4>Monitoring</h4>\n          <hr />\n          <Alert severity=\"info\">Fetching data from sources</Alert>\n        </CardContent>\n      </Card>\n    );\n  }\n  updateLoader(false);\n  return (\n    <Card>\n      <CardContent>\n        {!showRouteDetails || !routeDetailsData ? (\n          <>\n            <h4>\n              Monitoring <ServicesState />\n            </h4>\n            <hr />\n            <Matrix\n              timeSeriesPath={response.data}\n              showRouteDetails={showDetails}\n            />\n          </>\n        ) : (\n          <RouteDetailsComponent\n            routesChains={routeDetailsData}\n            showDetails={showDetails}\n          />\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Monitoring;\n","import React, { FC, useState, useEffect } from 'react';\nimport { useFetch } from '../../utils/useFetch';\nimport { service_states, HOST_IP } from '../../utils/types';\nimport { Card, CardContent, TextField } from '@material-ui/core';\nimport {\n  RoutesSummary,\n  QueryResponse,\n  chartData,\n  APIQueryResponse\n} from '../../utils/queryTypes';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Alert from '@material-ui/lab/Alert';\nimport { formatTime } from '../../utils/brt';\nimport Ping from '../Monitoring/Ping';\nimport { filterUrl } from '../../utils/filterUrl';\n\nconst format = (datas: QueryResponse) => {\n  const pingMin: chartData[] = [];\n  const pingMean: chartData[] = [];\n  const pingMax: chartData[] = [];\n\n  for (const value of datas.values) {\n    pingMin.push({\n      y: value.value.minValue,\n      x: formatTime(value.timestamp)\n    });\n    pingMean.push({\n      y: value.value.avgValue,\n      x: formatTime(value.timestamp)\n    });\n    pingMax.push({\n      y: value.value.maxValue,\n      x: formatTime(value.timestamp)\n    });\n  }\n\n  return {\n    pingMin,\n    pingMean,\n    pingMax\n  };\n};\n\ninterface showChartsDataParam {\n  pingMin: chartData[];\n  pingMean: chartData[];\n  pingMax: chartData[];\n}\n\nconst PingModule: FC<{}> = () => {\n  const [routesDetails, setRoutesDetails] = useState<RoutesSummary>();\n  const [value] = useState(routesDetails?.testServicesRoutes[0]);\n  const [inputValue, setInputValue] = useState('');\n  const [showCharts, setShowCharts] = useState(false);\n  const [pingData, setPingData] = useState<showChartsDataParam>();\n\n  const { response, error } = useFetch<service_states>(\n    `${HOST_IP}/service-state`\n  );\n\n  useEffect(() => {\n    fetch(`${HOST_IP}/routes-summary`)\n      .then(res => res.json())\n      .then((response: { status: string; data: RoutesSummary }) => {\n        setRoutesDetails(response.data);\n      });\n  }, []);\n\n  async function getChartsData(v: any) {\n    const res = filterUrl(v);\n    try {\n      const response = await fetch(\n        `${HOST_IP}/query?timeSeriesPath=storage/ping/chunk_ping_${res}`\n      );\n      const matrix = (await response.json()) as APIQueryResponse;\n      var formatdata = format(matrix.data);\n      setPingData(formatdata);\n      setShowCharts(true);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  if (error) {\n    return <Alert severity=\"error\">Unable to reach the service: error</Alert>;\n  }\n  if (!response.data) {\n    return <Alert severity=\"info\">Fetching from sources</Alert>;\n  }\n\n  // TODO: add the status icon for the module\n  // const states: service_states = response.data;\n\n  const options =\n    routesDetails?.testServicesRoutes !== undefined\n      ? routesDetails.testServicesRoutes\n      : ['Please fill routes'];\n\n  return (\n    <Card>\n      <CardContent>\n        <div>\n          <h4>Ping</h4>\n          <div style={{ float: 'right', marginTop: '-45px' }}>\n            <Autocomplete\n              value={value}\n              onChange={(event, newValue) => {}}\n              inputValue={inputValue}\n              onInputChange={(event, newInputValue) => {\n                setInputValue(newInputValue);\n                getChartsData(newInputValue);\n              }}\n              id=\"controllable-states-demo\"\n              options={options}\n              style={{ width: 300 }}\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  label=\"Select Route\"\n                  variant=\"outlined\"\n                />\n              )}\n            />\n          </div>\n        </div>\n        <br />\n        <hr />\n        <div>\n          {pingData !== undefined && showCharts ? (\n            <Ping\n              min={pingData.pingMin}\n              mean={pingData.pingMean}\n              max={pingData.pingMax}\n            />\n          ) : null}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PingModule;\n","import React, { FC } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Config from '../pages/Config/Config';\nimport Dashboard from '../pages/Dashboard/Dashboard';\nimport FloodPing from '../pages/FloodPing';\nimport Input from '../pages/Input/Input';\nimport JitterModule from '../pages/Jitter/JitterModule';\nimport Monitoring from '../pages/Monitoring/Monitoring';\nimport PingModule from '../pages/Ping/PingModule';\n\ninterface NavigatorProps {\n  updateLoader(status: boolean): void;\n}\n\nconst Navigator: FC<NavigatorProps> = ({ updateLoader }) => {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact={true}\n          path=\"/\"\n          render={props => <Dashboard updateLoader={updateLoader} />}\n        />\n        <Route\n          exact={true}\n          path=\"/monitoring\"\n          render={props => <Monitoring updateLoader={updateLoader} />}\n        />\n        <Route path=\"/ping\" component={PingModule} />\n        <Route path=\"/floodping\" component={FloodPing} />\n        <Route path=\"/jitter\" component={JitterModule} />\n        <Route path=\"/quick-input\" component={Input} />\n        <Route path=\"/configurations\" component={Config} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Navigator;\n","import {\n  Collapse,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AccessAlarm as AccessAlarmIcon,\n  ChevronLeft as ChevronLeftIcon,\n  Dashboard as DashboardIcon,\n  ExpandLess as ExpandLessIcon,\n  ExpandMore as ExpandMoreIcon,\n  NetworkCheck as NetworkCheckIcon,\n  PostAdd as PostAddIcon,\n  Settings as SettingsIcon\n} from '@material-ui/icons';\nimport clsx from 'clsx';\nimport React, { FC, useState } from 'react';\nimport { HashRouter as Router, Link } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  // root class\n  root: {\n    display: 'flex'\n  },\n  // Nested lists\n  nested: {\n    paddingLeft: theme.spacing(4),\n    backgroundColor: '#DCDCDC'\n  },\n  // Drawer styles\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  // SettingsIcon\n  settings: {\n    position: 'absolute',\n    bottom: 0,\n    alignItems: 'center'\n  }\n}));\n\ninterface SidebarProps {\n  open: boolean;\n  handleDrawerClose(): void;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ handleDrawerClose, open }) => {\n  const classes = useStyles();\n\n  // Sidebar element\n  const [testListOpen, setTestListOpen] = useState(false);\n  const showTestList = () => {\n    setTestListOpen(!testListOpen);\n  };\n  const menuItems = (\n    <div>\n      <ListItem button={true} component={Link} to=\"/\">\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n      <ListItem button={true} component={Link} to=\"/monitoring\">\n        <ListItemIcon>\n          <AccessAlarmIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Monitoring\" />\n      </ListItem>\n      <ListItem button={true} component={Link} to=\"/quick-input\">\n        <ListItemIcon>\n          <PostAddIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Quick Input\" />\n      </ListItem>\n      <ListItem button={true}>\n        <ListItemIcon>\n          <NetworkCheckIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Tests\" onClick={showTestList} />\n        {open ? (\n          <ExpandLessIcon onClick={showTestList} />\n        ) : (\n          <ExpandMoreIcon onClick={showTestList} />\n        )}\n      </ListItem>\n      {/* Nested List */}\n      <Collapse in={testListOpen} timeout=\"auto\" unmountOnExit={true}>\n        <List component=\"div\" disablePadding={true}>\n          <ListItem\n            button={true}\n            component={Link}\n            to=\"/ping\"\n            className={classes.nested}\n          >\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Ping\" />\n          </ListItem>\n          <ListItem\n            button={true}\n            component={Link}\n            to=\"/floodping\"\n            className={classes.nested}\n          >\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"FloodPing\" />\n          </ListItem>\n          <ListItem\n            button={true}\n            component={Link}\n            to=\"/jitter\"\n            className={classes.nested}\n          >\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Jitter\" />\n          </ListItem>\n        </List>\n      </Collapse>\n      <ListItem button={true} component={Link} to=\"/configurations\">\n        <ListItemIcon>\n          <SettingsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Config\" />\n      </ListItem>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Router>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{menuItems}</List>\n        </Drawer>\n      </Router>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { CssBaseline, Switch, Tooltip } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Menu as MenuIcon } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport React, { ReactElement, useCallback, useState } from 'react';\nimport Navigator from '../router/Navigation';\nimport Sidebar from './Sidebar';\n\nconst drawerWidth = 240;\n\nconst _useStyles = makeStyles(theme => ({\n  // AppBar styles\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  title: {\n    flexGrow: 1\n  },\n  // Toolbar styles\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  // IconMenu styles\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  }\n}));\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  color: {\n    primary: theme.palette.primary\n  },\n  // Content styles\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\nexport default function BaseLayout(props: any): ReactElement {\n  // Access styles\n  const classes = useStyles();\n  const _classes = _useStyles();\n  const [loader, setLoader] = useState<boolean>(false);\n\n  const updateLoader = useCallback((status: boolean) => {\n    setLoader(status);\n  }, []);\n\n  // Opens and closes the drawer\n  const [open, setOpen] = useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggleDarkMode = () => {\n    const { darkMode, toggleDarkMode } = props;\n    toggleDarkMode(!darkMode);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      {/* Navbar */}\n      <div className=\"_navbar\">\n        <AppBar\n          position=\"absolute\"\n          className={clsx(_classes.appBar, open && _classes.appBarShift)}\n        >\n          <Toolbar className={_classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                _classes.menuButton,\n                open && _classes.menuButtonHidden\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap={true}\n              className={_classes.title}\n            >\n              Bench Routes\n            </Typography>\n            <Tooltip title=\"Dark Mode\">\n              <Switch\n                checked={props.darkMode}\n                onChange={handleToggleDarkMode}\n                color=\"default\"\n                name=\"checkedB\"\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n            </Tooltip>\n          </Toolbar>\n          {loader ? <LinearProgress /> : null}\n        </AppBar>\n      </div>\n      <Sidebar handleDrawerClose={handleDrawerClose} open={open} />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Navigator updateLoader={updateLoader} />\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import { blue, grey } from '@material-ui/core/colors';\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider\n} from '@material-ui/core/styles';\nimport React, { useState } from 'react';\nimport './App.css';\nimport './assets/bootstrap.min.css';\nimport BaseLayout from './layouts/BaseLayout';\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState<boolean>(false);\n  let theme = createMuiTheme({\n    palette: {\n      // Provides you with all\n      // shades of whites\n      type: darkMode ? 'dark' : 'light',\n      primary: blue\n      // secondary: <Color>,\n    },\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"'\n      ].join(','),\n      fontSize: 12\n    },\n    overrides: {\n      MuiAppBar: {\n        colorPrimary: {\n          backgroundColor: darkMode ? grey[700] : blue[500]\n        }\n      }\n    }\n  });\n  theme = responsiveFontSizes(theme);\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <BaseLayout toggleDarkMode={toggleDarkMode} darkMode={darkMode} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}